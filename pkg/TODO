O DO
------

o  Generalizing  'wgt.himedian':  We'd want a C API on which R builds.

   There are pure R implementations:
    - 'weighted.median()' in limma
    	 and I have generalized it ---> inst/ex-funs.R

    - more general code (different 'tie' strategies; weighted *quantile*s)
      in /u/maechler/R/MM/STATISTICS/robust/weighted-median.R


o covOGK(): is *inconsistent* (by a constant factor, depending on n)
  	    as long as it is used with the inconsistent scale.tau2()
	    {the one that was proposed in the paper}.
  The argument name 'weight.fn' is pretty ugly and the default function
  name 'hard.rejection()' is just awful (we need a globally available
  function as 'role model'.

  - Consider making 'hard rejection'  the default though!
  -   "        "    n.iter = 1 or = 2 the default.

o rrcov.control() __ NEEDS  name change ! ______
   probably use  mcd.control() and lts.control()

   or forget about *control() completely?
   since there only a few in each ??????/

----

o tolellipse() --> renamed to tolEllipsePlot()
     - maybe use  cluster::ellipsoidPoints()
     - allow other percentiles than just  97.5%
     - maybe *return* something

o summary.mcd() should *return* and object of class "summary.mcd"
  and then  print.summary.mcd() should print it !!!

o plot(mcd. ) : should show the call !
